package ${PACKAGE};

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import ${FQ_CLASS_TO_EXTEND};
#set($templateExists = $parseCheck.templateExists("/templates/jira/customfield/baseclasses/${CLASS_TO_EXTEND}-imports.inc"))
#if($templateExists)
#parse("templates/jira/customfield/baseclasses/${CLASS_TO_EXTEND}-imports.inc")
#end
import com.atlassian.jira.issue.customfields.impl.FieldValidationException;
import com.atlassian.jira.issue.Issue;
import com.atlassian.jira.issue.fields.CustomField;
import com.atlassian.jira.issue.fields.config.FieldConfig;
import com.atlassian.jira.issue.fields.layout.field.FieldLayoutItem;
import java.util.List;
import java.util.Map;

public class ${CLASSNAME} extends ${CLASS_TO_EXTEND} {
    private static final Logger log = LoggerFactory.getLogger(${CLASSNAME}.class);

    #if($templateExists)
#parse("templates/jira/customfield/baseclasses/${CLASS_TO_EXTEND}-constructor.inc")
    #end

    @Override
    public Map<String, Object> getVelocityParameters(final Issue issue,
                                                     final CustomField field,
                                                     final FieldLayoutItem fieldLayoutItem) {
        final Map<String, Object> map = super.getVelocityParameters(issue, field, fieldLayoutItem);

        // This method is also called to get the default value, in
        // which case issue is null so we can't use it to add currencyLocale
        if (issue == null) {
            return map;
        }

         FieldConfig fieldConfig = field.getRelevantConfig(issue);
         //add what you need to the map here

        return map;
    }
}